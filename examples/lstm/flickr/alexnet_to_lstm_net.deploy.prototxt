name: "caffenet_to_lstm"

input: "data"
input_dim: 1
input_dim: 3
input_dim: 224
input_dim: 224

input: "cont_sentence"
input_dim: 1
input_dim: 1
input_dim: 1
input_dim: 1

input: "input_sentence"
input_dim: 1
input_dim: 1
input_dim: 1
input_dim: 1

# image processing layers
layers {
  name: "conv1"
  type: CONVOLUTION
  bottom: "data"
  top: "conv1"
  blobs_lr: 0
  blobs_lr: 0
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
  }
  include { stage: "freeze-convnet" }
}
layers {
  name: "conv1"
  type: CONVOLUTION
  bottom: "data"
  top: "conv1"
  blobs_lr: 0.01
  blobs_lr: 0.02
  weight_decay: 1
  weight_decay: 0
  convolution_param {
    num_output: 96
    kernel_size: 11
    stride: 4
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
  exclude { stage: "freeze-convnet" }
}
layers {
  name: "relu1"
  type: RELU
  bottom: "conv1"
  top: "conv1"
}
layers {
  name: "pool1"
  type: POOLING
  bottom: "conv1"
  top: "pool1"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layers {
  name: "norm1"
  type: LRN
  bottom: "pool1"
  top: "norm1"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layers {
  name: "conv2"
  type: CONVOLUTION
  bottom: "norm1"
  top: "conv2"
  blobs_lr: 0
  blobs_lr: 0
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
  }
  include { stage: "freeze-convnet" }
}
layers {
  name: "conv2"
  type: CONVOLUTION
  bottom: "norm1"
  top: "conv2"
  blobs_lr: 0.01
  blobs_lr: 0.02
  weight_decay: 1
  weight_decay: 0
  convolution_param {
    num_output: 256
    pad: 2
    kernel_size: 5
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
  exclude { stage: "freeze-convnet" }
}
layers {
  name: "relu2"
  type: RELU
  bottom: "conv2"
  top: "conv2"
}
layers {
  name: "pool2"
  type: POOLING
  bottom: "conv2"
  top: "pool2"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layers {
  name: "norm2"
  type: LRN
  bottom: "pool2"
  top: "norm2"
  lrn_param {
    local_size: 5
    alpha: 0.0001
    beta: 0.75
  }
}
layers {
  name: "conv3"
  type: CONVOLUTION
  bottom: "norm2"
  top: "conv3"
  blobs_lr: 0
  blobs_lr: 0
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
  }
  include { stage: "freeze-convnet" }
}
layers {
  name: "conv3"
  type: CONVOLUTION
  bottom: "norm2"
  top: "conv3"
  blobs_lr: 0.01
  blobs_lr: 0.02
  weight_decay: 1
  weight_decay: 0
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
  exclude { stage: "freeze-convnet" }
}
layers {
  name: "relu3"
  type: RELU
  bottom: "conv3"
  top: "conv3"
}
layers {
  name: "conv4"
  type: CONVOLUTION
  bottom: "conv3"
  top: "conv4"
  blobs_lr: 0
  blobs_lr: 0
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
  }
  include { stage: "freeze-convnet" }
}
layers {
  name: "conv4"
  type: CONVOLUTION
  bottom: "conv3"
  top: "conv4"
  blobs_lr: 0.01
  blobs_lr: 0.02
  weight_decay: 1
  weight_decay: 0
  convolution_param {
    num_output: 384
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
  exclude { stage: "freeze-convnet" }
}
layers {
  name: "relu4"
  type: RELU
  bottom: "conv4"
  top: "conv4"
}
layers {
  name: "conv5"
  type: CONVOLUTION
  bottom: "conv4"
  top: "conv5"
  blobs_lr: 0
  blobs_lr: 0
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
  }
  include { stage: "freeze-convnet" }
}
layers {
  name: "conv5"
  type: CONVOLUTION
  bottom: "conv4"
  top: "conv5"
  blobs_lr: 0.01
  blobs_lr: 0.02
  weight_decay: 1
  weight_decay: 0
  convolution_param {
    num_output: 256
    pad: 1
    kernel_size: 3
    group: 2
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
  exclude { stage: "freeze-convnet" }
}
layers {
  name: "relu5"
  type: RELU
  bottom: "conv5"
  top: "conv5"
}
layers {
  name: "pool5"
  type: POOLING
  bottom: "conv5"
  top: "pool5"
  pooling_param {
    pool: MAX
    kernel_size: 3
    stride: 2
  }
}
layers {
  name: "fc6"
  type: INNER_PRODUCT
  bottom: "pool5"
  top: "fc6"
  blobs_lr: 0
  blobs_lr: 0
  inner_product_param {
    num_output: 4096
  }
  include { stage: "freeze-convnet" }
}
layers {
  name: "fc6"
  type: INNER_PRODUCT
  bottom: "pool5"
  top: "fc6"
  blobs_lr: 0.01
  blobs_lr: 0.02
  weight_decay: 1
  weight_decay: 0
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
  exclude { stage: "freeze-convnet" }
}
layers {
  name: "relu6"
  type: RELU
  bottom: "fc6"
  top: "fc6"
}
layers {
  name: "drop6"
  type: DROPOUT
  bottom: "fc6"
  top: "fc6"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layers {
  name: "fc7"
  type: INNER_PRODUCT
  bottom: "fc6"
  top: "fc7"
  blobs_lr: 0
  blobs_lr: 0
  inner_product_param {
    num_output: 4096
  }
  include { stage: "freeze-convnet" }
}
layers {
  name: "fc7"
  type: INNER_PRODUCT
  bottom: "fc6"
  top: "fc7"
  blobs_lr: 0.01
  blobs_lr: 0.02
  weight_decay: 1
  weight_decay: 0
  inner_product_param {
    num_output: 4096
    weight_filler {
      type: "gaussian"
      std: 0.005
    }
    bias_filler {
      type: "constant"
      value: 1
    }
  }
  exclude { stage: "freeze-convnet" }
}
layers {
  name: "relu7"
  type: RELU
  bottom: "fc7"
  top: "fc7"
}
layers {
  name: "drop7"
  type: DROPOUT
  bottom: "fc7"
  top: "fc7"
  dropout_param {
    dropout_ratio: 0.5
  }
}
layers {
  name: "fc8"
  type: INNER_PRODUCT
  bottom: "fc7"
  top: "fc8"
  blobs_lr: 0
  blobs_lr: 0
  inner_product_param {
    num_output: 1000
  }
  include { stage: "freeze-convnet" }
}
layers {
  name: "fc8"
  type: INNER_PRODUCT
  bottom: "fc7"
  top: "fc8"
  blobs_lr: 0.01
  blobs_lr: 0.02
  weight_decay: 1
  weight_decay: 0
  inner_product_param {
    num_output: 1000
    weight_filler {
      type: "gaussian"
      std: 0.01
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
  exclude { stage: "freeze-convnet" }
}
# sentence generation layers
layers {
  name: "embedding"
  type: INNER_PRODUCT
  bottom: "input_sentence"
  top: "embedded_input_sentence"
  blobs_lr: 1.0
  inner_product_param {
    bias_term: false
    index_input_dim: 41719
    # wc -l cocoflickr/flickr30k_hdf5/buffer_100_maxwords_20/vocabulary.txt
    # 41718 cocoflickr/flickr30k_hdf5/buffer_100_maxwords_20/vocabulary.txt
    num_output: 1000
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
  }
}
layers {
  name: "lstm1"
  type: LSTM
  bottom: "embedded_input_sentence"
  bottom: "cont_sentence"
  top: "lstm1"
  lstm_param {
    hidden_dim: 1000
    buffer_size: 1
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layers {
  name: "lstm2_input"
  type: CONCAT
  bottom: "lstm1"
  bottom: "fc8"
  top: "lstm2_input"
}
layers {
  name: "lstm2"
  type: LSTM
  bottom: "lstm2_input"
  bottom: "cont_sentence"
  top: "lstm2"
  lstm_param {
    hidden_dim: 1000
    buffer_size: 1
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layers {
  name: "lstm3"
  type: LSTM
  bottom: "lstm2"
  bottom: "cont_sentence"
  top: "lstm3"
  lstm_param {
    hidden_dim: 1000
    buffer_size: 1
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layers {
  name: "lstm4"
  type: LSTM
  bottom: "lstm3"
  bottom: "cont_sentence"
  top: "lstm4"
  lstm_param {
    hidden_dim: 1000
    buffer_size: 1
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layers {
  name: "predict"
  type: INNER_PRODUCT
  bottom: "lstm4"
  top: "predict"
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  inner_product_param {
    num_output: 41719
    weight_filler {
      type: "uniform"
      min: -0.08
      max: 0.08
    }
    bias_filler {
      type: "constant"
      value: 0
    }
  }
}
layers {
  name: "probs"
  type: SOFTMAX
  bottom: "predict"
  top: "probs"
}
