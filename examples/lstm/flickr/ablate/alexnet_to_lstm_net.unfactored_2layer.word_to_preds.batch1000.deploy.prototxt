name: "caffenet_to_lstm"

input: "input_sentence"
input_dim: 1000
input_dim: 1
input_dim: 1
input_dim: 1

layers {
  name: "image_features"
  top: "image_features"
  top: "cont_sentence"
  type: MEMORY_DATA
  memory_data_param {
    batch_size: 1000
    channels: 1000
    height: 1
    width: 1
  }
}

# sentence generation layers
layers {
  name: "embedding"
  type: INNER_PRODUCT
  bottom: "input_sentence"
  top: "embedded_input_sentence"
  blobs_lr: 1.0
  inner_product_param {
    bias_term: false
    index_input_dim: 41719
    # wc -l cocoflickr/flickr30k_hdf5/buffer_100_maxwords_20/vocabulary.txt
    # 41718 cocoflickr/flickr30k_hdf5/buffer_100_maxwords_20/vocabulary.txt
    num_output: 1000
  }
}
layers {
  name: "lstm1_input"
  type: CONCAT
  bottom: "embedded_input_sentence"
  bottom: "image_features"
  top: "lstm1_input"
}
layers {
  name: "lstm1"
  type: LSTM
  bottom: "lstm1_input"
  bottom: "cont_sentence"
  top: "lstm1"
  lstm_param {
    hidden_dim: 1000
    buffer_size: 1000
  }
}
layers {
  name: "lstm2"
  type: LSTM
  bottom: "lstm1"
  bottom: "cont_sentence"
  top: "lstm2"
  lstm_param {
    hidden_dim: 1000
    buffer_size: 1000
  }
}
layers {
  name: "predict"
  type: INNER_PRODUCT
  bottom: "lstm2"
  top: "predict"
  blobs_lr: 1
  blobs_lr: 2
  weight_decay: 1
  weight_decay: 0
  inner_product_param {
    num_output: 41719
  }
}
layers {
  name: "probs"
  type: SOFTMAX
  bottom: "predict"
  top: "probs"
}
layers {
  name: "samples"
  type: SAMPLE
  bottom: "probs"
  top: "samples"
}
